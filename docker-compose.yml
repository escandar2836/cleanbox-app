services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15
    container_name: cleanbox_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cleanbox_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis (스케줄러 작업 큐용)
  redis:
    image: redis:7-alpine
    container_name: cleanbox_redis
    ports:
      - "6379:6379"
    networks:
      - cleanbox_network
    restart: unless-stopped

  # CleanBox 웹 애플리케이션
  cleanbox:
    build: .
    container_name: cleanbox_app
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_PORT=${FLASK_PORT}
      - CLEANBOX_DATABASE_URI=${CLEANBOX_DATABASE_URI}
      - CLEANBOX_SECRET_KEY=${CLEANBOX_SECRET_KEY}
      - CLEANBOX_ENCRYPTION_KEY=${CLEANBOX_ENCRYPTION_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - OAUTHLIB_INSECURE_TRANSPORT=${OAUTHLIB_INSECURE_TRANSPORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cleanbox_network
    volumes:
      - ./instance:/app/instance
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  cleanbox_network:
    driver: bridge 